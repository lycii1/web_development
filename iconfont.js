;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-facebook" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M681.8161 612.2455c33.9272 0 67.6229-0.3717 101.2951 0.2324 10.0792 0.1403 15.0456-3.0188 16.3011-13.0621 4.8302-38.1071 9.986-76.1682 14.8634-114.2528 0.3246-2.6931-0.6062-5.5255-1.1858-10.1939-44.0515 0-87.4988 0-130.4852 0 0-38.5024-2.2036-75.1698 0.7905-111.4194 1.9978-24.5699 23.8275-36.7841 57.2672-37.6433 26.1007-0.6963 52.2476-0.1393 79.6979-0.1393 0-41.6143 0-81.5329 0-124.6321-21.3647-1.579-43.1473-4.9234-64.8602-4.4124-32.9974 0.766-67.0638-0.3021-98.6952 7.4547-70.3836 17.2534-114.9942 77.9786-116.5957 151.8715-0.8591 38.4553-0.1618 76.9096-0.1618 117.5962-6.9898 0.4178-13.0744 1.067-19.158 1.0916-27.4012 0.1157-54.828 0.3942-82.2292-0.1178-10.752-0.2089-16.2785 2.6941-16.1628 14.4906 0.3482 36.1564 0.3246 72.3139 0.0225 108.4692-0.1157 11.4606 4.8312 14.9903 15.8843 14.804 33.1141-0.511 66.2292-0.1853 100.3663-0.1853 0 115.2266 0 228.6428 0 343.4527-158.0483 0-315.6787 0-474.6568 0 0-296.4992 0-593.0076 0-890.8052 296.4736 0 592.9492 0 890.8155 0 0 296.3343 0 592.8202 0 890.9425-4.6213 0.3717-9.6358 1.1151-14.6289 1.1602-81.0691 0.0481-162.1125-0.0901-243.159 0.2335-11.052 0.0471-17.3681-1.5299-17.321-14.8152 0.3482-107.2855 0.2079-214.569 0.2785-321.9016C680.0998 618.282 680.9805 616.0998 681.8161 612.2455z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-twitter" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M1023.8 284.2c-0.2-16.3-0.3-23-0.4-30.7-0.4-23-1.9-46.2-5.8-67-4.3-22.6-10-43.2-20.5-63.8-10.6-20.9-25.1-38.9-40.8-55-16.1-15.7-34.2-30.2-55-40.8-20.6-10.4-41.1-16.2-63.8-20.5-20.8-3.9-44-5.4-67-5.8-7.7-0.1-14.4-0.2-30.7-0.4C724.2 0.1 711.5 0 702.1 0c-47.6 0-332.6 0-380.3 0-9.4 0-22.1 0.1-37.6 0.2-16.3 0.2-23 0.3-30.7 0.4-23 0.4-46.2 1.9-67 5.8-22.6 4.3-43.2 10-63.8 20.5-20.9 10.6-38.9 25.1-55 40.8-15.7 16.1-30.2 34.2-40.8 55-10.4 20.6-16.2 41.1-20.5 63.8-3.9 20.8-5.4 44-5.8 67-0.1 7.7-0.2 14.4-0.4 30.7C0.1 299.8 0 312.5 0 321.9l0 380.3c0 9.4 0.1 22.1 0.2 37.6 0.2 16.3 0.3 23 0.4 30.7 0.4 23 1.9 46.2 5.8 67 4.3 22.6 10 43.2 20.5 63.8 10.6 20.9 25.1 38.9 40.8 55 16.1 15.7 34.2 30.2 55 40.8 20.6 10.4 41.1 16.2 63.8 20.5 20.8 3.9 44 5.4 67 5.8 7.7 0.1 14.4 0.2 30.7 0.4 15.5 0.1 28.2 0.2 37.6 0.2 47.6 0 332.6 0 380.3 0 9.4 0 22.1-0.1 37.6-0.2 16.3-0.2 23-0.3 30.7-0.4 23-0.4 46.2-1.9 67-5.8 22.6-4.3 43.2-10 63.8-20.5 20.9-10.6 38.9-25.1 55-40.8 15.7-16.1 30.2-34.2 40.8-55 10.4-20.6 16.2-41.1 20.5-63.8 3.9-20.8 5.4-44 5.8-67 0.1-7.7 0.2-14.4 0.4-30.7 0.1-15.5 0.2-28.2 0.2-37.6L1023.9 321.9C1024 312.5 1023.9 299.8 1023.8 284.2zM807 363.3C803.6 620.6 639 796.9 393.4 808c-101.3 4.6-174.7-28.1-238.6-68.7 74.9 12 167.7-18 217.4-60.5-73.4-7.2-116.8-44.5-137.2-104.6 21.2 3.7 43.5 2.7 63.7-1.6-66.2-22.2-113.5-63.1-116-148.9 18.6 8.5 38 16.4 63.7 18-49.6-28.2-86.2-131.2-44.2-199.4 73.6 80.7 162.1 146.5 307.4 155.4C473.1 241.8 679.8 157.2 766.2 262c36.6-7.1 66.3-20.9 94.9-36-11.8 36.2-34.5 61.5-62.1 81.8 30.4-4.1 57.2-11.5 80.2-22.9C865 314.4 833.8 341 807 363.3z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-instagram" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M853.989313 0l-683.978626 0c-93.501078 0-170.010687 76.509609-170.010687 170.010687l0 683.978626c0 93.501078 76.509609 170.010687 170.010687 170.010687l683.978626 0c93.501078 0 170.010687-76.509609 170.010687-170.010687l0-683.978626c0-93.501078-76.509609-170.010687-170.010687-170.010687zM327.797756 447.986l368.404487 0c6.975782 20.063373 10.783663 41.5987 10.783663 63.998 0 107.51664-87.485266 195.001906-195.001906 195.001906s-195.001906-87.485266-195.001906-195.001906c0-22.3993 3.807881-43.934627 10.815662-63.998zM895.972001 448.049998l0 383.924002c0 35.1989-28.7991 63.998-63.998 63.998l-639.980001 0c-35.1989 0-63.998-28.7991-63.998-63.998l0-383.988 100.092872 0c-4.639855 20.607356-7.103778 42.014687-7.103778 63.998 0 160.442986 130.523921 290.998906 290.998906 290.998906s290.998906-130.523921 290.998906-290.998906c0-21.983313-2.463923-43.390644-7.103778-63.998l100.092872 0.063998zM895.972001 223.993c0 17.59945-14.39955 31.999-31.999 31.999l-63.998 0c-17.59945 0-31.999-14.39955-31.999-31.999l0-63.998c0-17.59945 14.39955-31.999 31.999-31.999l63.998 0c17.59945 0 31.999 14.39955 31.999 31.999l0 63.998z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)